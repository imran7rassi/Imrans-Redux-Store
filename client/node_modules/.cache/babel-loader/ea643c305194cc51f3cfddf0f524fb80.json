{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\imran\\\\bootcamp\\\\Imrans-Redux-Store\\\\client\\\\src\\\\components\\\\CategoryMenu\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_CATEGORIES } from \"../../utils/queries\";\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CategoryMenu() {\n  _s();\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n  const {\n    loading,\n    data: categoryData\n  } = useQuery(QUERY_CATEGORIES);\n  const {\n    categories\n  } = state;\n  useEffect(() => {\n    // if categoryData exists or has changed from the response of useQuery, then run dispatch()\n    if (categoryData) {\n      // execute our dispatch function with our action object indicating the type of action and the data to set our state for categories to\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Choose a Category:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), categories.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        handleClick(item._id);\n      },\n      children: item.name\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n}\n_s(CategoryMenu, \"fZlk5AO4w7xj+1PVTji4WsxydJU=\", false, function () {\n  return [useSelector, useDispatch, useQuery];\n});\n_c = CategoryMenu;\nexport default CategoryMenu;\nvar _c;\n$RefreshReg$(_c, \"CategoryMenu\");","map":{"version":3,"names":["React","useEffect","useQuery","QUERY_CATEGORIES","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","idbPromise","useSelector","useDispatch","jsxDEV","_jsxDEV","CategoryMenu","_s","state","dispatch","loading","data","categoryData","categories","type","forEach","category","then","handleClick","id","currentCategory","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","onClick","_id","name","_c","$RefreshReg$"],"sources":["C:/Users/imran/bootcamp/Imrans-Redux-Store/client/src/components/CategoryMenu/index.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_CATEGORIES } from \"../../utils/queries\";\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nfunction CategoryMenu() {\n  const state = useSelector(state => state);\n\n  const dispatch = useDispatch(); \n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  const { categories } = state;\n\n  useEffect(() => {\n    // if categoryData exists or has changed from the response of useQuery, then run dispatch()\n    if (categoryData) {\n      // execute our dispatch function with our action object indicating the type of action and the data to set our state for categories to\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n   const handleClick = id => {\n  dispatch({\n    type: UPDATE_CURRENT_CATEGORY,\n    currentCategory: id\n  });\n  };\n\n  return (\n  <div>\n    <h2>Choose a Category:</h2>\n    {categories.map(item => (\n      <button\n        key={item._id}\n        onClick={() => {\n          handleClick(item._id);\n        }}\n      >\n        {item.name}\n      </button>\n    ))}\n  </div>\n);\n}\n\nexport default CategoryMenu;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,SAASC,gBAAgB,QAAQ,qBAAqB;AACtD,SAASC,iBAAiB,EAAEC,uBAAuB,QAAQ,qBAAqB;AAChF,SAASC,UAAU,QAAQ,qBAAqB;AAChD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,KAAK,GAAGN,WAAW,CAACM,KAAK,IAAIA,KAAK,CAAC;EAEzC,MAAMC,QAAQ,GAAGN,WAAW,EAAE;EAE9B,MAAM;IAAEO,OAAO;IAAEC,IAAI,EAAEC;EAAa,CAAC,GAAGf,QAAQ,CAACC,gBAAgB,CAAC;EAElE,MAAM;IAAEe;EAAW,CAAC,GAAGL,KAAK;EAE5BZ,SAAS,CAAC,MAAM;IACd;IACA,IAAIgB,YAAY,EAAE;MAChB;MACAH,QAAQ,CAAC;QACPK,IAAI,EAAEf,iBAAiB;QACvBc,UAAU,EAAED,YAAY,CAACC;MAC3B,CAAC,CAAC;MACFD,YAAY,CAACC,UAAU,CAACE,OAAO,CAACC,QAAQ,IAAI;QAC1Cf,UAAU,CAAC,YAAY,EAAE,KAAK,EAAEe,QAAQ,CAAC;MAC3C,CAAC,CAAC;IACJ,CAAC,MAAM,IAAI,CAACN,OAAO,EAAE;MACnBT,UAAU,CAAC,YAAY,EAAE,KAAK,CAAC,CAACgB,IAAI,CAACJ,UAAU,IAAI;QACjDJ,QAAQ,CAAC;UACPK,IAAI,EAAEf,iBAAiB;UACvBc,UAAU,EAAEA;QACd,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACD,YAAY,EAAEF,OAAO,EAAED,QAAQ,CAAC,CAAC;EAEpC,MAAMS,WAAW,GAAGC,EAAE,IAAI;IAC3BV,QAAQ,CAAC;MACPK,IAAI,EAAEd,uBAAuB;MAC7BoB,eAAe,EAAED;IACnB,CAAC,CAAC;EACF,CAAC;EAED,oBACAd,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EAC1BZ,UAAU,CAACa,GAAG,CAACC,IAAI,iBAClBtB,OAAA;MAEEuB,OAAO,EAAEA,CAAA,KAAM;QACbV,WAAW,CAACS,IAAI,CAACE,GAAG,CAAC;MACvB,CAAE;MAAAR,QAAA,EAEDM,IAAI,CAACG;IAAI,GALLH,IAAI,CAACE,GAAG;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAOhB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAER;AAAClB,EAAA,CApDQD,YAAY;EAAA,QACLJ,WAAW,EAERC,WAAW,EAEYN,QAAQ;AAAA;AAAAkC,EAAA,GALzCzB,YAAY;AAsDrB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}